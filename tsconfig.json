{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig to read more about this file */
    /* Basic Options */
    "target": "ES6", /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "lib": [
      "ESNext",
      "DOM"
    ], /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    "allowJs": true, /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */
    "resolveJsonModule": true, /* Enable importing .json files. */
    "rootDir": "src", /* Specify the root folder within your source files. */
    "outDir": "dist", /* Specify an output folder for all emitted files. */
    "removeComments": true, /* Disable emitting comments. */
    // "declaration": true,
    // "emitDeclarationOnly": false,
    // "declarationMap": false,
    // "declarationDir": "./types",
    /* Strict Type Checking Options */
    "strict": true, /* Enable all strict type-checking options. */
    "noImplicitAny": true, /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    "strictNullChecks": true, /* When type checking, take into account 'null' and 'undefined'. */
    "strictFunctionTypes": true, /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
    "alwaysStrict": true, /* Ensure 'use strict' is always emitted. */
    "noUnusedLocals": true, /* Enable error reporting when local variables aren't read. */
    "noUnusedParameters": true, /* Raise an error when a function parameter isn't read. */
    "exactOptionalPropertyTypes": true, /* Interpret optional property types as written, rather than adding 'undefined'. */
    "noImplicitReturns": true, /* Enable error reporting for codepaths that do not explicitly return in a function. */
    "noImplicitOverride": true, /* Ensure overriding members in derived classes are marked with an override modifier. */
    "noPropertyAccessFromIndexSignature": true, /* Enforces using indexed accessors for keys declared using an indexed type. */
    "allowUnusedLabels": false, /* Disable error reporting for unused labels. */
    "allowUnreachableCode": false, /* Disable error reporting for unreachable code. */
    /* Module Resolution Options*/
    "module": "commonjs", /* Specify what module code is generated. */
    "moduleResolution": "Node", /* Specify how TypeScript looks up a file from a given module specifier. */
    "baseUrl": ".", /* Specify the base directory to resolve non-relative module names. */
    "paths": {
      "@src/*": [
        "src/*"
      ]
    }, /* Specify a set of entries that re-map imports to additional lookup locations. */
    "esModuleInterop": true, /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    /* Experimental Options */
    "experimentalDecorators": true, /* Enable experimental support for legacy experimental decorators. */
    "emitDecoratorMetadata": true, /* Emit design-type metadata for decorated declarations in source files. */
    /* Advanced Options */
    "skipLibCheck": true, /* Skip type checking all .d.ts files. */
    "forceConsistentCasingInFileNames": true, /* Ensure that casing is correct in imports. */
  },
  "exclude": [
    "node_modules",
    "dist",
    "coverage",
    "./jest.config.js"
  ],
  "include": [
    "src",
  ]
}